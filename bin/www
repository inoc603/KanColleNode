var net = require('net')
  , httpPort = 5050
  , httpParser = require('http-string-parser')
  , querystring = require('querystring')
  , request = require('request')
  , config = require('../lib/config')
  , _ = require('underscore')
  , http = require('http')
  , fs = require('fs')

  , simpleProxy = false
  , proxyHost
  , proxyPort
  , debugging = 0

  , app = require('../app')
  , KcnFilter = require('../lib/http-filter')

if (config.config.proxy) {
  console.log('simple')
  simpleProxy = true
  var proxy = config.config.proxy.split(':')
  proxyHost = proxy[0]
  proxyPort = (proxy[1]?parseInt(proxy[1]):80)
}
else {
  simpleProxy = false
  proxyHost = '127.0.0.1'
  proxyPort = 3001
}

console.log(proxyHost, proxyPort)

var httpProxy = net.createServer(function (socket) {
  var proxy = net.connect(proxyPort, proxyHost)
    , kcn = net.connect(3001, '127.0.0.1')
    , kcnFilter = new KcnFilter()

  socket.setKeepAlive(true)

  var unset = true
  socket.on('data', function (data) {
    if (unset) {
      if (data.toString().search('Host: 127.0.0.1') != -1) {
        proxy.end()
        kcn.write(data)
        socket.pipe(kcn).pipe(socket)
      }
      else {
        kcn.end()
        kcnFilter.reqParser.write(data)
        socket
          .pipe(kcnFilter.reqParser)
          .pipe(proxy)
          .pipe(kcnFilter.resParser)
          .pipe(socket)
      }
      unset = false
    }
  })
  socket.on('error', function (err) {
    console.log(err)
  })
  proxy.on('error', function (err) {
    console.log(err)
  })
  kcn.on('error', function (err) {
    console.log(err)
  })
})

httpProxy.listen(httpPort, 'localhost')



// the content of www is moved to app.js due to the use of socket.io
