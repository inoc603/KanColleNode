#!/usr/bin/env node

/* seperate HTTP and HTTPS
var net = require('net')
  , httpPort = 5050
  , httpsPort = 5051
  , httpTarget = 3001
  , httpsTarget = 8099

var proxy = function (port) {
  return function (socket) {
    var client
    var req = new Buffer('')
    var resp = new Buffer('')

    socket.setKeepAlive(true)
    // Create a new connection to the TCP server
    client = net.connect(port)

    // 2-way pipe between client and TCP server
    socket.pipe(client).pipe(socket)

    socket.on('error', function (err) {
      console.log('socket', err)
    })

    client.on('error', function (err) {
      console.log('client', err)
    })
  }
}

var httpProxy = net.createServer(function (socket) {
    var client
    var req = new Buffer('')
    var resp = new Buffer('')

    socket.setKeepAlive(true)
    // Create a new connection to the TCP server
    client = net.connect(httpTarget)

    // 2-way pipe between client and TCP server
    socket.pipe(client).pipe(socket)

    socket.on('error', function (err) {
      // console.log('socket', err)
    })

    client.on('error', function (err) {
      // console.log('client', err)
    })
  })
 
var httpsProxy = net.createServer(function (socket) {
    var client
    var req = new Buffer('')
    var resp = new Buffer('')

    socket.setKeepAlive(true)
    // Create a new connection to the TCP server
    client = net.connect(httpsTarget)

    // 2-way pipe between client and TCP server
    socket.pipe(client).pipe(socket)

    socket.on('error', function (err) {
      // console.log('socket', err)
    })

    client.on('error', function (err) {
      // console.log('client', err)
    })
  })

httpProxy.listen(httpPort)
httpsProxy.listen(httpsPort)
*/

var app = require('../app')

// the content of www is moved to app.js due to the use of socket.io